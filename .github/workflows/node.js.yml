# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:

    runs-on: ubuntu-latest
    outputs:
      npm_old: ${{ steps.npm_test.outputs.npm_old }}
      npm_new: ${{ steps.npm_semantic.outputs.npm_new }}
    
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install, build, and run tests
      id: npm_test
      run: |
        npm ci
        npm run build --if-present
        npm test
        npm run eslint
        echo '::set-output name=npm_old::$(npm view timings version)'
    - name: Release
      id: npm_semantic
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      run: |
        npx semantic-release
        echo '::set-output name=npm_new::$(npm view timings version)'
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: coverage/cobertura-coverage.xml
  build:
    runs-on: ubuntu-latest
    needs: test
    if: needs.test.steps.npm_test.outputs.NPM_OLD != needs.test.steps.npm_semantic.outputs.NPM_NEW
    steps:
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@master
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Login to Docker Hub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: |
          godaddy/timings:latest
          godaddy/timings:${NPM_NEW}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
