# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Timings CI - test

'on':
  push:
    branches:
    - "**"

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 19.x, 20.x]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.1.4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install, build, and run tests
      id: npm_test
      run: |
        npm ci
        npm test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        file: coverage/cobertura-coverage.xml
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    # Run release after testing!
    - name: semantic-release [DRY-RUN]
      if: ${{ matrix.node-version == '20.x' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      id: release
      run: |
        echo "lastRelease=`cat package.json | jq -r .version`" >> $GITHUB_OUTPUT

        npx semantic-release --dry-run --no-ci --branches ${{ github.ref_name }} | tee release.output;

        echo "hasRelease=`if (grep -q 'The next release version is' release.output); then echo true; else echo false; fi`" >> $GITHUB_OUTPUT
        echo "nextRelease=`grep 'The next release version is' release.output | sed -E 's/.* ([[:digit:].]+)$/\1/'`" >> $GITHUB_OUTPUT

    - name: Update job summary after semantic-release
      run: |
        if [ '${{ steps.release.outputs.hasRelease }}' == 'true' ]; then
          echo - A new release will be published! >> $GITHUB_STEP_SUMMARY
          echo - Last Release: **${{ steps.release.outputs.lastRelease }}** >> $GITHUB_STEP_SUMMARY
          echo - Next Release: **${{ steps.release.outputs.nextRelease }}** >> $GITHUB_STEP_SUMMARY
        else
          echo - No new Release! The current release is: **${{ steps.release.outputs.lastRelease }}** >> $GITHUB_STEP_SUMMARY
        fi
