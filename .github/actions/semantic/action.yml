name: semantic-release-node
description: 'perform semantic-release actions for node'

inputs:
  publish:
    description: 'tell semantic-release to publish or run in DRY-RUN mode (default)'
    required: false
    default: 'false'
  add-summary:
    description: 'Add output of semantic-release results to GITHUB_STEP_SUMMARY'
    required: false
    default: 'false'

outputs:
  last_release_version:
    description: 'version before semantic-release'
    value: ${{ steps.release.outputs.last_release_version }}
  new_release_version:
    description: 'version after semantic-release'
    value: ${{ steps.release.outputs.new_release_version }}
  new_release_published:
    description: 'whether semantic-release did (or would) publish a new version'
    value: ${{ steps.release.outputs.new_release_published }}

runs:
  using: composite
  steps:
    - name: run-release
      id: release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN || env.GH_TOKEN }}
        NPM_TOKEN: ${{ env.NPM_TOKEN }}
      run: |
        echo "last_release_version=`cat package.json | jq -r .version`" >> $GITHUB_OUTPUT

        if [[ '${{ inputs.publish }}' == 'true' ]]; then
          npx semantic-release | tee release.output;
        else
          npx semantic-release --dry-run --no-ci --branches ${{ github.ref_name }} | tee release.output;
        fi

        echo "new_release_published=`if (grep -q 'The next release version is' release.output); then echo true; else echo false; fi`" >> $GITHUB_OUTPUT
        echo "new_release_version=`grep 'The next release version is' release.output | sed -E 's/.* ([[:digit:].]+)$/\1/'`" >> $GITHUB_OUTPUT

    - name: Update job summary after semantic-release
      if: ${{ inputs.add-summary == 'true' }}
      shell: bash
      run: |
        if [ '${{ steps.release.outputs.new_release_published }}' == 'true' ]; then
          echo - A new release ${{ inputs.publish == 'true' && 'was' || 'will be' }} published! >> $GITHUB_STEP_SUMMARY
          echo - Last Release: **${{ steps.release.outputs.last_release_version }}** >> $GITHUB_STEP_SUMMARY
          echo - New Release: **${{ steps.release.outputs.new_release_version }}** >> $GITHUB_STEP_SUMMARY
        else
          echo - No new Release! The current release is: **${{ steps.release.outputs.last_release_version }}** >> $GITHUB_STEP_SUMMARY
        fi
